cluster:
  name: clustername
  cidrBlocks: "10.245.0.0/16"
  controlPlaneEndpoint: "host.domain.com"
  controlPlaneEndpointIP: "192.168.1.11"
  # bgpPolicyVlan node label is used in Cilium CNI BGP, if not used leave empty and it will not be set.
  bgpPolicyVlan: "vlan201"
  skipKubeProxy: true

# Read about different levels
# https://kubernetes.io/docs/concepts/security/pod-security-standards/
# podSecurityStandards. if enabled on cluster level make sure deployments follow the rules
podSecurityStandard:
  # Enable pss default rules on cluster level (false will only enforce on ns with correct labels)
  enabled: false
  # Enforce level (privileged / baseline / restricted)
  enforce: baseline
  # which baseline to audit
  audit: restricted
  # Baseline to warn
  warn: restricted
  # Exemptions (do not remove kube-system)
  exemptions:
    namespaces:
      - kube-system   # Do Not Remove this, kube-system needs exception!!

network:
  prefix: "24"
  gateway: "192.168.1.1"
  nameserver: "192.168.1.1"
  poolStart: "192.168.1.2"
  poolEnd: "192.168.1.254"

node:
  datastore: SSD01
  template: ubuntu-2404-kube-v1.33.0
  sshAuthorizedKeys: PublicKey

vsphere:
  server: vcenter.domain.com
  serverIP: 1.2.3.4
  datacenter: Datacenter
  resourcePool: kubernetes
  insecureFlag: true
  username: username
  password: password
  thumbprint: thumbprint
  labels:
    region: region
    zone: zone

controlPlaneNodes:
  k8sVersion: 1.33.0
  vspehereMachineTemplate: ubnt2204-2cpu-4g-128
  replicas: 3

machineDeployments:
  - name: md-0
    vspehereMachineTemplate: ubnt2204-4cpu-8g-128
    k8sVersion: 1.33.0
    replicas: 2
    # Add additonal labels to nodes
    nodeLabels:
      node-role.kubernetes.io/worker: "true"

    nodeAnnotations:
      # cluster.x-k8s.io/cluster-api-autoscaler-node-group-max-size: "5"
      # cluster.x-k8s.io/cluster-api-autoscaler-node-group-min-size: "0"

    machineDeploymentLabels:
      autoscaler: enabled
    
    machineSetLabels:
      autoscaler: enabled

    # Add annotations to your machine deployments for example if you have autoscaler
    machideDeploymentAnnotations:
      # cluster.x-k8s.io/cluster-api-autoscaler-node-group-max-size: "5"
      # cluster.x-k8s.io/cluster-api-autoscaler-node-group-min-size: "0"

  - name: md-1
    vspehereMachineTemplate: ubnt2204-4cpu-8g-133
    k8sVersion: 1.33.0
    replicas: 3
    # Add additonal labels to nodes
    nodeLabels:
      node-role.kubernetes.io/worker: "true"

    nodeAnnotations:
      # cluster.x-k8s.io/cluster-api-autoscaler-node-group-max-size: "5"
      # cluster.x-k8s.io/cluster-api-autoscaler-node-group-min-size: "0"

    # Add annotations to your nodes for example if you have autoscaler
    machideDeploymentAnnotations:
      cluster.x-k8s.io/cluster-api-autoscaler-node-group-max-size: "5"
      cluster.x-k8s.io/cluster-api-autoscaler-node-group-min-size: "0"


# Machine templates
machineTemplates:
  - name: ubnt2204-2cpu-4g-133
    cpu: 2
    memory: 4096
    # linkedClone or fullClone , linkedClone is faster but but cant extend disk beyound template size
    cloneMode: FullClone
    diskSize: 25
    isoTemplate: ubuntu-2404-kube-v1.33.0
    vcenterDatastore: SSD01
    vcenterFolder:
    network: vcenterNetwork
    storagePolicyName: ""
  - name: ubnt2204-4cpu-8g-133
    cpu: 4
    memory: 8192
    # linkedClone or fullClone , linkedClone is faster but but cant extend disk beyound template size
    cloneMode: FullClone
    diskSize: 35
    isoTemplate: ubuntu-2404-kube-v1.33.0
    vcenterDatastore: SSD01
    vcenterFolder:
    network: vcenterNetwork
    storagePolicyName: ""

kubeVIP:
  image:
    repository: ghcr.io/kube-vip/kube-vip
    tag: v0.8.9
    pullPolicy: IfNotPresent

healthChecks:
  controlplane:
    name: cp-unhealthy-5m

    # maxUnhealthy prevents further remediation if the cluster is already partially unhealthy
    maxUnhealthy: 100%

    nodeStartupTimeout: 10m0s

    # Timeout for unhealthy condition when node status Ready is unknown or False. When timeout is reached node is considered unhealthy
    unhealthyTimeoutUnknown: 5m0s
    unhealthyTimeoutFalse: 5m0s

  # This chart will build one healtcheck per MachineDeployment
  workernodes:
    name: worker-unhealthy-5m

    # maxUnhealthy prevents further remediation if the cluster is already partially unhealthy
    maxUnhealthy: 40%

    # nodeStartupTimeout determines how long a MachineHealthCheck should wait for
    # a Node to join the cluster, before considering a Machine unhealthy.
    # Defaults to 10 minutes.
    # Set to 0 to disable the node startup timeout.
    # Disabling this timeout will prevent a Machine from being considered unhealthy when
    # the Node it created has not yet registered with the cluster. This can be useful when
    # Nodes take a long time to start up or when you only want condition based checks for
    # Machine health.
    nodeStartupTimeout: 10m0s

    # Timeout for unhealthy condition when node status Ready is unknown or False. When timeout is reached node is considered unhealthy
    unhealthyTimeoutUnknown: 5m0s
    unhealthyTimeoutFalse: 5m0s

addons:
  # Addons are installed via the helm provider for clusterapi
  vsphereCPI:
    enabled: false
    name: vsphere-cpi
    chart:
      repo:
      name:
      version:
    release:
      namespace:
      values: {}
  metricsServer:
    enabled: false
    name: metrics-server
    chart:
      repo: https://kubernetes-sigs.github.io/metrics-server
      name: metrics-server
      version: 3.8.3
    release:
      namespace: kube-system
      values:
        image:
          repository: registry.k8s.io/metrics-server/metrics-server
          # Overrides the image tag whose default is v{{ .Chart.AppVersion }}
          tag: ""
          pullPolicy: IfNotPresent
